[PHP]
; Maximum execution time of each script, in seconds
max_execution_time = 300

; Maximum amount of time each script may spend parsing request data
max_input_time = 300

; Maximum amount of memory a script may consume
memory_limit = 512M

; Maximum allowed size for uploaded files
upload_max_filesize = 100M

; Maximum number of files that can be uploaded via a single request
max_file_uploads = 20

; Maximum size of POST data that PHP will accept
post_max_size = 100M

; Whether to allow HTTP file uploads
file_uploads = On

; Temporary directory for HTTP uploaded files
upload_tmp_dir = /tmp

; Whether to allow the treatment of URLs (like http:// or ftp://) as files
allow_url_fopen = On

; Whether to allow include/require to open URLs (like http:// or ftp://) as files
allow_url_include = Off

; Default timeout for socket based streams (seconds)
default_socket_timeout = 60

; If enabled, the request will be allowed to complete even if the user aborts the request
ignore_user_abort = On

; Determines the size of the realpath cache to be used by PHP
realpath_cache_size = 4096K

; Duration of time, in seconds for which to cache realpath information for a given file or directory
realpath_cache_ttl = 600

; Enables or disables GZIP output compression
zlib.output_compression = Off

; Implicit flush tells PHP to tell the output layer to flush itself automatically after every output block
implicit_flush = Off

; The unserialize callback function will be called (with the undefined class' name as parameter), if the unserializer finds an undefined class which should be instantiated
unserialize_callback_func =

; When floats & doubles are serialized store serialize_precision significant digits after the floating point
serialize_precision = -1

; open_basedir, if set, limits all file operations to the defined directory-tree
; open_basedir =

; This directive allows you to disable certain functions for security reasons
disable_functions =

; This directive allows you to disable certain classes for security reasons
disable_classes =

; Colors for Syntax Highlighting mode
highlight.string = #DD0000
highlight.comment = #FF9900
highlight.keyword = #007700
highlight.default = #0000BB
highlight.html = #000000

; If enabled, scripts may be written in encodings that are incompatible with the scanner
zend.detect_unicode = On

; Allows to set the default encoding for the multibyte string functions
; mbstring.language = Japanese
; mbstring.internal_encoding = UTF-8
; mbstring.http_input = UTF-8
; mbstring.http_output = UTF-8
; mbstring.encoding_translation = Off
; mbstring.detect_order = UTF-8,SJIS,EUC-JP,JIS,ASCII
; mbstring.substitute_character = none
; mbstring.func_overload = 0

; connection_status() returns the connection status bitfield
; connection_status = 0

; Tell the jpeg decode to ignore warnings and try to create a gd image
gd.jpeg_ignore_warning = 1

[Date]
; Defines the default timezone used by the date functions
date.timezone = UTC

[Session]
; Handler used to store/retrieve data
session.save_handler = files

; Argument passed to save_handler
session.save_path = "/tmp"

; Whether to use cookies
session.use_cookies = 1

; This option forces PHP to fetch and use a cookie for storing and maintaining the session id
session.use_only_cookies = 1

; Name of the session (used as cookie name)
session.name = PHPSESSID

; Initialize session on request startup
session.auto_start = 0

; Lifetime in seconds of cookie or, if 0, until browser is restarted
session.cookie_lifetime = 0

; The path for which the cookie is valid
session.cookie_path = /

; The domain for which the cookie is valid
session.cookie_domain =

; Whether or not to add the httpOnly flag to the cookie
session.cookie_httponly = 1

; Whether or not to add the secure flag to the cookie
session.cookie_secure = 0

; Handler used to serialize data
session.serialize_handler = php

; Defines the probability that the 'garbage collection' process is started on every session initialization
session.gc_probability = 0

; Defines what argument is passed to the respective handler
session.gc_divisor = 1000

; After this number of seconds, stored data will be seen as 'garbage' and cleaned up by the garbage collection process
session.gc_maxlifetime = 1440

[opcache]
; Determines if Zend OPCache is enabled
opcache.enable=1

; Determines if Zend OPCache is enabled for the CLI version of PHP
opcache.enable_cli=1

; The OPcache shared memory storage size
opcache.memory_consumption=128

; The amount of memory for interned strings in Mbytes
opcache.interned_strings_buffer=8

; The maximum number of keys (scripts) in the OPcache hash table
opcache.max_accelerated_files=4000

; The maximum percentage of "wasted" memory until a restart is scheduled
opcache.max_wasted_percentage=5

; When this directive is enabled, the OPcache appends the current working directory to the script key
opcache.use_cwd=1

; When disabled, you must reset the OPcache manually or restart the webserver for changes to the filesystem to take effect
opcache.validate_timestamps=0

; How often (in seconds) to check file timestamps for changes to the shared memory storage allocation
opcache.revalidate_freq=2

; Enables or disables file search in include_path optimization
opcache.revalidate_path=0

; If disabled, all PHPDoc comments are dropped from the code to reduce the size of the optimized code
opcache.save_comments=1

; Allow file existence override (file_exists, etc.) performance feature
opcache.enable_file_override=0

; A bitmask, where each bit enables or disables the appropriate OPcache passes
opcache.optimization_level=0x7FFFBFFF

; This hack should only be enabled to work around "can't redeclare class" errors
opcache.dups_fix=0

; Set the cache directory
opcache.file_cache=/tmp
